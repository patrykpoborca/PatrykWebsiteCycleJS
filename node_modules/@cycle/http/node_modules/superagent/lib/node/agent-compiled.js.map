{"version":3,"sources":["agent.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;AAC/C,IAAI,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC;AACzD,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;AACjC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;AAMjC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;;;;;;;;AAQvB,SAAS,KAAK,CAAC,OAAO,EAAE;AACtB,MAAI,EAAE,IAAI,YAAY,KAAK,CAAA,AAAC,EAAE,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;AACxD,MAAI,OAAO,EAAE,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;AACnC,MAAI,CAAC,GAAG,GAAG,IAAI,SAAS,EAAA,CAAC;CAC1B;;;;;;;;;;AAUD,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAS,GAAG,EAAC;AACzC,MAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AACxC,MAAI,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;CAC3C,CAAC;;;;;;;;;AASF,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG,UAAS,GAAG,EAAC;AAC3C,MAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACzB,MAAI,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAE,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;AAChF,MAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;AAC1D,KAAG,CAAC,OAAO,GAAG,OAAO,CAAC;CACvB,CAAC;;;;AAIF,OAAO,CAAC,OAAO,CAAC,UAAS,MAAM,EAAC;AAC9B,MAAI,IAAI,GAAG,QAAQ,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;;AAE/C,QAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAC9B,OAAK,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,UAAS,GAAG,EAAE,EAAE,EAAC;AACvC,QAAI,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC/B,OAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEjB,OAAG,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAChD,OAAG,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAChD,OAAG,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AACvD,QAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;AAExB,MAAE,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAClB,WAAO,GAAG,CAAC;GACZ,CAAC;CACH,CAAC,CAAC","file":"agent-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar CookieJar = require('cookiejar').CookieJar;\nvar CookieAccess = require('cookiejar').CookieAccessInfo;\nvar parse = require('url').parse;\nvar request = require('./index');\nvar methods = require('methods');\n\n/**\n * Expose `Agent`.\n */\n\nmodule.exports = Agent;\n\n/**\n * Initialize a new `Agent`.\n *\n * @api public\n */\n\nfunction Agent(options) {\n  if (!(this instanceof Agent)) return new Agent(options);\n  if (options) this._ca = options.ca;\n  this.jar = new CookieJar;\n}\n\n/**\n * Save the cookies in the given `res` to\n * the agent's cookie jar for persistence.\n *\n * @param {Response} res\n * @api private\n */\n\nAgent.prototype.saveCookies = function(res){\n  var cookies = res.headers['set-cookie'];\n  if (cookies) this.jar.setCookies(cookies);\n};\n\n/**\n * Attach cookies when available to the given `req`.\n *\n * @param {Request} req\n * @api private\n */\n\nAgent.prototype.attachCookies = function(req){\n  var url = parse(req.url);\n  var access = CookieAccess(url.hostname, url.pathname, 'https:' == url.protocol);\n  var cookies = this.jar.getCookies(access).toValueString();\n  req.cookies = cookies;\n};\n\n// generate HTTP verb methods\n\nmethods.forEach(function(method){\n  var name = 'delete' == method ? 'del' : method;\n\n  method = method.toUpperCase();\n  Agent.prototype[name] = function(url, fn){\n    var req = request(method, url);\n    req.ca(this._ca);\n\n    req.on('response', this.saveCookies.bind(this));\n    req.on('redirect', this.saveCookies.bind(this));\n    req.on('redirect', this.attachCookies.bind(this, req));\n    this.attachCookies(req);\n\n    fn && req.end(fn);\n    return req;\n  };\n});\n"]}