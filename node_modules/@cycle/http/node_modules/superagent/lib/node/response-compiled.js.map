{"version":3,"sources":["response.js"],"names":[],"mappings":"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","file":"response-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar util = require('util');\nvar utils = require('./utils');\nvar Stream = require('stream');\n\n/**\n * Expose `Response`.\n */\n\nmodule.exports = Response;\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * @param {Request} req\n * @param {Object} options\n * @constructor\n * @extends {Stream}\n * @implements {ReadableStream}\n * @api private\n */\n\nfunction Response(req, options) {\n  Stream.call(this);\n  options = options || {};\n  var res = this.res = req.res;\n  this.request = req;\n  this.req = req.req;\n  this.links = {};\n  this.text = res.text;\n  this.body = res.body !== undefined ? res.body : {};\n  this.files = res.files || {};\n  this.buffered = 'string' == typeof this.text;\n  this.header = this.headers = res.headers;\n  this.setStatusProperties(res.statusCode);\n  this.setHeaderProperties(this.header);\n  this.setEncoding = res.setEncoding.bind(res);\n  res.on('data', this.emit.bind(this, 'data'));\n  res.on('end', this.emit.bind(this, 'end'));\n  res.on('close', this.emit.bind(this, 'close'));\n  res.on('error', this.emit.bind(this, 'error'));\n}\n\n/**\n * Inherit from `Stream`.\n */\n\nutil.inherits(Response, Stream);\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Implements methods of a `ReadableStream`\n */\n\nResponse.prototype.destroy = function(err){\n  this.res.destroy(err);\n};\n\n/**\n * Pause.\n */\n\nResponse.prototype.pause = function(){\n  this.res.pause();\n};\n\n/**\n * Resume.\n */\n\nResponse.prototype.resume = function(){\n  this.res.resume();\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var path = req.path;\n\n  var msg = 'cannot ' + method + ' ' + path + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.text = this.text;\n  err.method = method;\n  err.path = path;\n\n  return err;\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // TODO: moar!\n  // TODO: make this a util\n\n  // content-type\n  var ct = this.header['content-type'] || '';\n\n  // params\n  var params = utils.params(ct);\n  for (var key in params) this[key] = params[key];\n\n  this.type = utils.type(ct);\n\n  // links\n  try {\n    if (header.link) this.links = utils.parseLinks(header.link);\n  } catch (err) {\n    // ignore\n  }\n};\n\n/**\n * Parse cookies from the header into an array.\n */\n\nfunction parseCookies(header) {\n  return Array.isArray(header)\n    ? header.map(Cookie.parse)\n    : [Cookie.parse(header)];\n}\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.redirect = 3 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.forbidden = 403 == status;\n  this.notFound = 404 == status;\n};\n\n/**\n * To json.\n *\n * @return {Object}\n * @api public\n */\n\nResponse.prototype.toJSON = function(){\n  return {\n    req: this.request.toJSON(),\n    header: this.header,\n    status: this.status,\n    text: this.text\n  };\n};\n"]}