{"version":3,"sources":["cookiejar.js"],"names":[],"mappings":"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","file":"cookiejar-compiled.js","sourcesContent":["/* jshint node: true */\n(function () {\n    \"use strict\";\n\n    function CookieAccessInfo(domain, path, secure, script) {\n        if (this instanceof CookieAccessInfo) {\n            this.domain = domain || undefined;\n            this.path = path || \"/\";\n            this.secure = !!secure;\n            this.script = !!script;\n            return this;\n        }\n        return new CookieAccessInfo(domain, path, secure, script);\n    }\n    exports.CookieAccessInfo = CookieAccessInfo;\n\n    function Cookie(cookiestr, request_domain, request_path) {\n        if (cookiestr instanceof Cookie) {\n            return cookiestr;\n        }\n        if (this instanceof Cookie) {\n            this.name = null;\n            this.value = null;\n            this.expiration_date = Infinity;\n            this.path = String(request_path || \"/\");\n            this.explicit_path = false;\n            this.domain = request_domain || null;\n            this.explicit_domain = false;\n            this.secure = false; //how to define default?\n            this.noscript = false; //httponly\n            if (cookiestr) {\n                this.parse(cookiestr, request_domain, request_path);\n            }\n            return this;\n        }\n        return new Cookie(cookiestr);\n    }\n    exports.Cookie = Cookie;\n\n    Cookie.prototype.toString = function toString() {\n        var str = [this.name + \"=\" + this.value];\n        if (this.expiration_date !== Infinity) {\n            str.push(\"expires=\" + (new Date(this.expiration_date)).toGMTString());\n        }\n        if (this.domain) {\n            str.push(\"domain=\" + this.domain);\n        }\n        if (this.path) {\n            str.push(\"path=\" + this.path);\n        }\n        if (this.secure) {\n            str.push(\"secure\");\n        }\n        if (this.noscript) {\n            str.push(\"httponly\");\n        }\n        return str.join(\"; \");\n    };\n\n    Cookie.prototype.toValueString = function toValueString() {\n        return this.name + \"=\" + this.value;\n    };\n\n    var cookie_str_splitter = /[:](?=\\s*[a-zA-Z0-9_\\-]+\\s*[=])/g;\n    Cookie.prototype.parse = function parse(str, request_domain, request_path) {\n        if (this instanceof Cookie) {\n            var parts = str.split(\";\").filter(function (value) {\n                    return !!value;\n                }),\n                pair = parts[0].match(/([^=]+)=([\\s\\S]*)/),\n                key = pair[1],\n                value = pair[2],\n                i;\n            this.name = key;\n            this.value = value;\n\n            for (i = 1; i < parts.length; i += 1) {\n                pair = parts[i].match(/([^=]+)(?:=([\\s\\S]*))?/);\n                key = pair[1].trim().toLowerCase();\n                value = pair[2];\n                switch (key) {\n                case \"httponly\":\n                    this.noscript = true;\n                    break;\n                case \"expires\":\n                    this.expiration_date = value ?\n                            Number(Date.parse(value)) :\n                            Infinity;\n                    break;\n                case \"path\":\n                    this.path = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_path = true;\n                    break;\n                case \"domain\":\n                    this.domain = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_domain = !!this.domain;\n                    break;\n                case \"secure\":\n                    this.secure = true;\n                    break;\n                }\n            }\n\n            if (!this.explicit_path) {\n               this.path = request_path || \"/\";\n            }\n            if (!this.explicit_domain) {\n               this.domain = request_domain;\n            }\n\n            return this;\n        }\n        return new Cookie().parse(str, request_domain, request_path);\n    };\n\n    Cookie.prototype.matches = function matches(access_info) {\n        if (this.noscript && access_info.script ||\n                this.secure && !access_info.secure ||\n                !this.collidesWith(access_info)) {\n            return false;\n        }\n        return true;\n    };\n\n    Cookie.prototype.collidesWith = function collidesWith(access_info) {\n        if ((this.path && !access_info.path) || (this.domain && !access_info.domain)) {\n            return false;\n        }\n        if (this.path && access_info.path.indexOf(this.path) !== 0) {\n            return false;\n        }\n        if (!this.explicit_path) {\n           if (this.path !== access_info.path) {\n               return false;\n           }\n        }\n        var access_domain = access_info.domain && access_info.domain.replace(/^[\\.]/,'');\n        var cookie_domain = this.domain && this.domain.replace(/^[\\.]/,'');\n        if (cookie_domain === access_domain) {\n            return true;\n        }\n        if (cookie_domain) {\n            if (!this.explicit_domain) {\n                return false; // we already checked if the domains were exactly the same\n            }\n            var wildcard = access_domain.indexOf(cookie_domain);\n            if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    };\n\n    function CookieJar() {\n        var cookies, cookies_list, collidable_cookie;\n        if (this instanceof CookieJar) {\n            cookies = Object.create(null); //name: [Cookie]\n\n            this.setCookie = function setCookie(cookie, request_domain, request_path) {\n                var remove, i;\n                cookie = new Cookie(cookie, request_domain, request_path);\n                //Delete the cookie if the set is past the current time\n                remove = cookie.expiration_date <= Date.now();\n                if (cookies[cookie.name] !== undefined) {\n                    cookies_list = cookies[cookie.name];\n                    for (i = 0; i < cookies_list.length; i += 1) {\n                        collidable_cookie = cookies_list[i];\n                        if (collidable_cookie.collidesWith(cookie)) {\n                            if (remove) {\n                                cookies_list.splice(i, 1);\n                                if (cookies_list.length === 0) {\n                                    delete cookies[cookie.name];\n                                }\n                                return false;\n                            }\n                            cookies_list[i] = cookie;\n                            return cookie;\n                        }\n                    }\n                    if (remove) {\n                        return false;\n                    }\n                    cookies_list.push(cookie);\n                    return cookie;\n                }\n                if (remove) {\n                    return false;\n                }\n                cookies[cookie.name] = [cookie];\n                return cookies[cookie.name];\n            };\n            //returns a cookie\n            this.getCookie = function getCookie(cookie_name, access_info) {\n                var cookie, i;\n                cookies_list = cookies[cookie_name];\n                if (!cookies_list) {\n                    return;\n                }\n                for (i = 0; i < cookies_list.length; i += 1) {\n                    cookie = cookies_list[i];\n                    if (cookie.expiration_date <= Date.now()) {\n                        if (cookies_list.length === 0) {\n                            delete cookies[cookie.name];\n                        }\n                        continue;\n                    }\n                    if (cookie.matches(access_info)) {\n                        return cookie;\n                    }\n                }\n            };\n            //returns a list of cookies\n            this.getCookies = function getCookies(access_info) {\n                var matches = [], cookie_name, cookie;\n                for (cookie_name in cookies) {\n                    cookie = this.getCookie(cookie_name, access_info);\n                    if (cookie) {\n                        matches.push(cookie);\n                    }\n                }\n                matches.toString = function toString() {\n                    return matches.join(\":\");\n                };\n                matches.toValueString = function toValueString() {\n                    return matches.map(function (c) {\n                        return c.toValueString();\n                    }).join(';');\n                };\n                return matches;\n            };\n\n            return this;\n        }\n        return new CookieJar();\n    }\n    exports.CookieJar = CookieJar;\n\n    //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.\n    CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {\n        cookies = Array.isArray(cookies) ?\n                cookies :\n                cookies.split(cookie_str_splitter);\n        var successful = [],\n            i,\n            cookie;\n        cookies = cookies.map(Cookie);\n        for (i = 0; i < cookies.length; i += 1) {\n            cookie = cookies[i];\n            if (this.setCookie(cookie, request_domain, request_path)) {\n                successful.push(cookie);\n            }\n        }\n        return successful;\n    };\n}());\n"]}