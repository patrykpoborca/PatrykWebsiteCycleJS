{"version":3,"sources":["debug.js"],"names":[],"mappings":"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","file":"debug-compiled.js","sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"]}