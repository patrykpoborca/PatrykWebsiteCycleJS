{"version":3,"sources":["test-delayed-http-upload.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAClC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC3B,IAAI,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;AACzC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;;AAE1C,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE;AAChD,MAAI,OAAO,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,WAAW,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC;;AAEtE,YAAU,CAAC,YAAW;AACpB,OAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AACnB,WAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACnB,EAAE,EAAE,CAAC,CAAC;CACR,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,YAAW;AACpC,MAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACzB,UAAM,EAAE,MAAM;AACd,QAAI,EAAE,MAAM,CAAC,IAAI;GAClB,CAAC,CAAC;;AAEH,SAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACtB,SAAO,CAAC,GAAG,EAAE,CAAC;;AAEd,SAAO,CAAC,EAAE,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE;AACnC,QAAI,QAAQ,GAAG,CAAC,CAAC;AACjB,OAAG,CACA,EAAE,CAAC,MAAM,EAAE,UAAS,KAAK,EAAE;AAC1B,cAAQ,IAAI,KAAK,CAAC,MAAM,CAAC;KAC1B,CAAC,CACD,EAAE,CAAC,KAAK,EAAE,YAAW;AACpB,YAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACtC,YAAM,CAAC,KAAK,EAAE,CAAC;KAChB,CAAC,CAAC;GACN,CAAC,CAAC;CACJ,CAAC,CAAC","file":"test-delayed-http-upload-compiled.js","sourcesContent":["var common = require('../common');\nvar assert = common.assert;\nvar DelayedStream = common.DelayedStream;\nvar http = require('http');\n\nvar UPLOAD = new Buffer(10 * 1024 * 1024);\n\nvar server = http.createServer(function(req, res) {\n  var delayed = DelayedStream.create(req, {maxDataSize: UPLOAD.length});\n\n  setTimeout(function() {\n    res.writeHead(200);\n    delayed.pipe(res);\n  }, 10);\n});\nserver.listen(common.PORT, function() {\n  var request = http.request({\n    method: 'POST',\n    port: common.PORT,\n  });\n\n  request.write(UPLOAD);\n  request.end();\n\n  request.on('response', function(res) {\n    var received = 0;\n    res\n      .on('data', function(chunk) {\n        received += chunk.length;\n      })\n      .on('end', function() {\n        assert.equal(received, UPLOAD.length);\n        server.close();\n      });\n  });\n});\n\n\n"]}