{"version":3,"sources":["json.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC;IAClC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IACtB,UAAU,GAAG,MAAM,CAAC,UAAU;IAC9B,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM;IACjC,IAAI,GAAG,MAAM,CAAC,IAAI;IAClB,MAAM,CAAC;;AAEX,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE;AAC5C,MAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;AACzB,OAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,cAAc,EAAE,YAAY,EAAC,CAAC,CAAA;AAClD,OAAG,CAAC,GAAG,CAAC,iDAAiD,GAAC,IAAI,GAAC,GAAG,CAAC,CAAA;AACnE,WAAO;GACR;;AAED,MAAI,IAAI,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE;MACpC,MAAM,GAAG,EAAE,CAAC;;AAEhB,MAAI,CACD,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;AACzB,OAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,cAAc,EAAE,YAAY,EAAC,CAAC,CAAC;AACnD,OAAG,CAAC,GAAG,CAAC,YAAY,GAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,WAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACpB,CAAC,CACD,EAAE,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE,KAAK,EAAE;AAClC,WAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC1B,UAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;GACvB,CAAC,CACD,EAAE,CAAC,KAAK,EAAE,YAAW;AACpB,WAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAC5B,OAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,cAAc,EAAE,YAAY,EAAC,CAAC,CAAC;AACnD,OAAG,CAAC,GAAG,CAAC,uBAAuB,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;GACvD,CAAC,CAAC;AACL,MAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CACjB,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEpB,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAC,IAAI,GAAC,GAAG,CAAC,CAAC;;AAGvD,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACzB,MAAI,EAAE,WAAW;AACjB,MAAI,EAAE,GAAG;AACT,MAAI,EAAE,IAAI;AACV,QAAM,EAAE,MAAM;AACd,SAAO,EAAE,EAAE,cAAc,EAAC,kBAAkB,EAAE,gBAAgB,EAAC,EAAE,EAAE;CACpE,EAAE,UAAS,QAAQ,EAAE;AACpB,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,SAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACxC,SAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC5C,UAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9B,UAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,YAAW;AAC5B,WAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AACjB,WAAO,CAAC,IAAI,EAAE,CAAC;GAChB,CAAC,CAAC;;;;;;;;;CASJ,CAAC,CAAA;;AAEF,OAAO,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;AAClE,OAAO,CAAC,GAAG,EAAE,CAAC","file":"json-compiled.js","sourcesContent":["var common = require('../test/common'),\n    http = require('http'),\n    util = require('util'),\n    formidable = common.formidable,\n    Buffer = require('buffer').Buffer,\n    port = common.port,\n    server;\n\nserver = http.createServer(function(req, res) {\n  if (req.method !== 'POST') {\n    res.writeHead(200, {'content-type': 'text/plain'})\n    res.end('Please POST a JSON payload to http://localhost:'+port+'/')\n    return;\n  }\n\n  var form = new formidable.IncomingForm(),\n      fields = {};\n\n  form\n    .on('error', function(err) {\n      res.writeHead(500, {'content-type': 'text/plain'});\n      res.end('error:\\n\\n'+util.inspect(err));\n      console.error(err);\n    })\n    .on('field', function(field, value) {\n      console.log(field, value);\n      fields[field] = value;\n    })\n    .on('end', function() {\n      console.log('-> post done');\n      res.writeHead(200, {'content-type': 'text/plain'});\n      res.end('received fields:\\n\\n '+util.inspect(fields));\n    });\n  form.parse(req);\n});\nserver.listen(port);\n\nconsole.log('listening on http://localhost:'+port+'/');\n\n\nvar request = http.request({\n  host: 'localhost',\n  path: '/',\n  port: port,\n  method: 'POST',\n  headers: { 'content-type':'application/json', 'content-length':48 }\n}, function(response) {\n  var data = '';\n  console.log('\\nServer responded with:');\n  console.log('Status:', response.statusCode);\n  response.pipe(process.stdout);\n  response.on('end', function() {\n    console.log('\\n')\n    process.exit();\n  });\n  // response.on('data', function(chunk) {\n  //   data += chunk.toString('utf8');\n  // });\n  // response.on('end', function() {\n  //   console.log('Response Data:')\n  //   console.log(data);\n  //   process.exit();\n  // });\n})\n\nrequest.write('{\"numbers\":[1,2,3,4,5],\"nested\":{\"key\":\"value\"}}');\nrequest.end();\n"]}