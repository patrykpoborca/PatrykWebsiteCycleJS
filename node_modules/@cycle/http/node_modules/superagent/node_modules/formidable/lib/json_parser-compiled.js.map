{"version":3,"sources":["json_parser.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;AAEpD,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAA;;AAErC,SAAS,UAAU,GAAG;AACpB,MAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;AAC3B,MAAI,CAAC,YAAY,GAAG,CAAC,CAAC;CACvB,CAAC;AACF,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;;AAEhC,UAAU,CAAC,SAAS,CAAC,cAAc,GAAG,UAAS,MAAM,EAAE;AACrD,MAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;CAChC,CAAA;;AAED,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,MAAM,EAAE;AAC5C,MAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE;AACzD,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;GAC3C,MAAM;AACL,QAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;GAChD;AACD,MAAI,CAAC,YAAY,IAAI,MAAM,CAAC,MAAM,CAAC;AACnC,SAAO,MAAM,CAAC,MAAM,CAAC;CACtB,CAAA;;AAED,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,YAAW;AACpC,MAAI;AACF,QAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;AACnD,SAAK,IAAI,KAAK,IAAI,MAAM,EAAE;AACxB,UAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KACpC;GACF,CAAC,OAAO,CAAC,EAAE,EAAE;AACd,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEjB,MAAI,CAAC,KAAK,EAAE,CAAC;CACd,CAAA","file":"json_parser-compiled.js","sourcesContent":["if (global.GENTLY) require = GENTLY.hijack(require);\n\nvar Buffer = require('buffer').Buffer\n\nfunction JSONParser() {\n  this.data = new Buffer('');\n  this.bytesWritten = 0;\n};\nexports.JSONParser = JSONParser;\n\nJSONParser.prototype.initWithLength = function(length) {\n  this.data = new Buffer(length);\n}\n\nJSONParser.prototype.write = function(buffer) {\n  if (this.data.length >= this.bytesWritten + buffer.length) {\n    buffer.copy(this.data, this.bytesWritten);\n  } else {\n    this.data = Buffer.concat([this.data, buffer]);\n  }\n  this.bytesWritten += buffer.length;\n  return buffer.length;\n}\n\nJSONParser.prototype.end = function() {\n  try {\n    var fields = JSON.parse(this.data.toString('utf8'))\n    for (var field in fields) {\n      this.onField(field, fields[field]);\n    }\n  } catch (e) {}\n  this.data = null;\n\n  this.onEnd();\n}"]}