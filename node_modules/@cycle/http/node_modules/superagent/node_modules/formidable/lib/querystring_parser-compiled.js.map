{"version":3,"sources":["querystring_parser.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;;;;AAIpD,IAAI,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEzC,SAAS,iBAAiB,CAAC,OAAO,EAAE;AAClC,MAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,MAAI,CAAC,MAAM,GAAG,EAAE,CAAC;CAClB,CAAC;AACF,OAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;;AAE9C,iBAAiB,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,MAAM,EAAE;AACnD,MAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;AACxC,SAAO,MAAM,CAAC,MAAM,CAAC;CACtB,CAAC;;AAEF,iBAAiB,CAAC,SAAS,CAAC,GAAG,GAAG,YAAW;AAC3C,MAAI,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AACjF,OAAK,IAAI,KAAK,IAAI,MAAM,EAAE;AACxB,QAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;GACpC;AACD,MAAI,CAAC,MAAM,GAAG,EAAE,CAAC;;AAEjB,MAAI,CAAC,KAAK,EAAE,CAAC;CACd,CAAC","file":"querystring_parser-compiled.js","sourcesContent":["if (global.GENTLY) require = GENTLY.hijack(require);\n\n// This is a buffering parser, not quite as nice as the multipart one.\n// If I find time I'll rewrite this to be fully streaming as well\nvar querystring = require('querystring');\n\nfunction QuerystringParser(maxKeys) {\n  this.maxKeys = maxKeys;\n  this.buffer = '';\n};\nexports.QuerystringParser = QuerystringParser;\n\nQuerystringParser.prototype.write = function(buffer) {\n  this.buffer += buffer.toString('ascii');\n  return buffer.length;\n};\n\nQuerystringParser.prototype.end = function() {\n  var fields = querystring.parse(this.buffer, '&', '=', { maxKeys: this.maxKeys });\n  for (var field in fields) {\n    this.onField(field, fields[field]);\n  }\n  this.buffer = '';\n\n  this.onEnd();\n};\n\n"]}