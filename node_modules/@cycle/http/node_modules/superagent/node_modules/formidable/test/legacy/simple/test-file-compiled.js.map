{"version":3,"sources":["test-file.js"],"names":[],"mappings":"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","file":"test-file-compiled.js","sourcesContent":["var common = require('../common');\nvar WriteStreamStub = GENTLY.stub('fs', 'WriteStream');\n\nvar File = require(common.lib + '/file'),\n    EventEmitter = require('events').EventEmitter,\n    file,\n    gently;\n\nfunction test(test) {\n  gently = new Gently();\n  file = new File();\n  test();\n  gently.verify(test.name);\n}\n\ntest(function constructor() {\n  assert.ok(file instanceof EventEmitter);\n  assert.strictEqual(file.size, 0);\n  assert.strictEqual(file.path, null);\n  assert.strictEqual(file.name, null);\n  assert.strictEqual(file.type, null);\n  assert.strictEqual(file.lastModifiedDate, null);\n\n  assert.strictEqual(file._writeStream, null);\n\n  (function testSetProperties() {\n    var file2 = new File({foo: 'bar'});\n    assert.equal(file2.foo, 'bar');\n  })();\n});\n\ntest(function open() {\n  var WRITE_STREAM;\n  file.path = '/foo';\n\n  gently.expect(WriteStreamStub, 'new', function (path) {\n    WRITE_STREAM = this;\n    assert.strictEqual(path, file.path);\n  });\n\n  file.open();\n  assert.strictEqual(file._writeStream, WRITE_STREAM);\n});\n\ntest(function write() {\n  var BUFFER = {length: 10},\n      CB_STUB,\n      CB = function() {\n        CB_STUB.apply(this, arguments);\n      };\n\n  file._writeStream = {};\n\n  gently.expect(file._writeStream, 'write', function (buffer, cb) {\n    assert.strictEqual(buffer, BUFFER);\n\n    gently.expect(file, 'emit', function (event, bytesWritten) {\n      assert.ok(file.lastModifiedDate instanceof Date);\n      assert.equal(event, 'progress');\n      assert.equal(bytesWritten, file.size);\n    });\n\n    CB_STUB = gently.expect(function writeCb() {\n      assert.equal(file.size, 10);\n    });\n\n    cb();\n\n    gently.expect(file, 'emit', function (event, bytesWritten) {\n      assert.equal(event, 'progress');\n      assert.equal(bytesWritten, file.size);\n    });\n\n    CB_STUB = gently.expect(function writeCb() {\n      assert.equal(file.size, 20);\n    });\n\n    cb();\n  });\n\n  file.write(BUFFER, CB);\n});\n\ntest(function end() {\n  var CB_STUB,\n      CB = function() {\n        CB_STUB.apply(this, arguments);\n      };\n\n  file._writeStream = {};\n\n  gently.expect(file._writeStream, 'end', function (cb) {\n    gently.expect(file, 'emit', function (event) {\n      assert.equal(event, 'end');\n    });\n\n    CB_STUB = gently.expect(function endCb() {\n    });\n\n    cb();\n  });\n\n  file.end(CB);\n});\n"]}