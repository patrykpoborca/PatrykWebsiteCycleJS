{"version":3,"sources":["test-multipart-parser.js"],"names":[],"mappings":"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","file":"test-multipart-parser-compiled.js","sourcesContent":["var common = require('../common');\nvar multipartParser = require(common.lib + '/multipart_parser'),\n    MultipartParser = multipartParser.MultipartParser,\n    events = require('events'),\n    Buffer = require('buffer').Buffer,\n    parser;\n\nfunction test(test) {\n  parser = new MultipartParser();\n  test();\n}\n\ntest(function constructor() {\n  assert.equal(parser.boundary, null);\n  assert.equal(parser.state, 0);\n  assert.equal(parser.flags, 0);\n  assert.equal(parser.boundaryChars, null);\n  assert.equal(parser.index, null);\n  assert.equal(parser.lookbehind, null);\n  assert.equal(parser.constructor.name, 'MultipartParser');\n});\n\ntest(function initWithBoundary() {\n  var boundary = 'abc';\n  parser.initWithBoundary(boundary);\n  assert.deepEqual(Array.prototype.slice.call(parser.boundary), [13, 10, 45, 45, 97, 98, 99]);\n  assert.equal(parser.state, multipartParser.START);\n\n  assert.deepEqual(parser.boundaryChars, {10: true, 13: true, 45: true, 97: true, 98: true, 99: true});\n});\n\ntest(function parserError() {\n  var boundary = 'abc',\n      buffer = new Buffer(5);\n\n  parser.initWithBoundary(boundary);\n  buffer.write('--ad', 'ascii', 0);\n  assert.equal(parser.write(buffer), 5);\n});\n\ntest(function end() {\n  (function testError() {\n    assert.equal(parser.end().message, 'MultipartParser.end(): stream ended unexpectedly: ' + parser.explain());\n  })();\n\n  (function testRegular() {\n    parser.state = multipartParser.END;\n    assert.strictEqual(parser.end(), undefined);\n  })();\n});\n"]}