{"version":3,"sources":["test-file.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAS,OAAO,CAAC,WAAW,CAAC,CAAC;AACxC,IAAI,IAAI,GAAW,OAAO,CAAC,OAAO,CAAC,CAAC;AACpC,IAAI,MAAM,GAAS,MAAM,CAAC,MAAM,CAAC;AACjC,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;AAElC,IAAI,IAAI,CAAC;AACT,IAAI,GAAG,GAAG,IAAI,IAAI,EAAA,CAAC;AACnB,IAAI,CAAC,cAAc,EAAE;AACnB,QAAM,EAAE,kBAAW;AACjB,QAAI,GAAG,IAAI,IAAI,CAAC;AACd,UAAI,EAAE,IAAI;AACV,UAAI,EAAE,cAAc;AACpB,UAAI,EAAE,SAAS;AACf,UAAI,EAAE,WAAW;AACjB,sBAAgB,EAAE,GAAG;AACrB,cAAQ,EAAE,SAAS;AACnB,UAAI,EAAE,WAAW;KAClB,CAAC,CAAA;GACH;;AAED,aAAW,EAAE,kBAAW;AACtB,QAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACxB,QAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;AAClC,UAAM,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7B,UAAM,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACvC,UAAM,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAClC,UAAM,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACpC,UAAM,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AACpC,UAAM,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtC,UAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AAC7B,UAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;GACtB;CACF,CAAC,CAAC","file":"test-file-compiled.js","sourcesContent":["var common       = require('../common');\nvar test         = require('utest');\nvar assert       = common.assert;\nvar File = common.require('file');\n\nvar file;\nvar now = new Date;\ntest('IncomingForm', {\n  before: function() {\n    file = new File({\n      size: 1024,\n      path: '/tmp/cat.png',\n      name: 'cat.png',\n      type: 'image/png',\n      lastModifiedDate: now,\n      filename: 'cat.png',\n      mime: 'image/png'\n    })\n  },\n\n  '#toJSON()': function() {\n    var obj = file.toJSON();\n    var len = Object.keys(obj).length;\n    assert.equal(1024, obj.size);\n    assert.equal('/tmp/cat.png', obj.path);\n    assert.equal('cat.png', obj.name);\n    assert.equal('image/png', obj.type);\n    assert.equal('image/png', obj.mime);\n    assert.equal('cat.png', obj.filename);\n    assert.equal(now, obj.mtime);\n    assert.equal(len, 8);\n  }\n});"]}