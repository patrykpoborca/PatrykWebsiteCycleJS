{"version":3,"sources":["test-incoming-form.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAS,OAAO,CAAC,WAAW,CAAC,CAAC;AACxC,IAAI,IAAI,GAAW,OAAO,CAAC,OAAO,CAAC,CAAC;AACpC,IAAI,MAAM,GAAS,MAAM,CAAC,MAAM,CAAC;AACjC,IAAI,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC;AAChE,IAAI,IAAI,GAAW,OAAO,CAAC,MAAM,CAAC,CAAC;;AAEnC,IAAI,IAAI,CAAC;AACT,IAAI,CAAC,cAAc,EAAE;AACnB,QAAM,EAAE,kBAAW;AACjB,QAAI,GAAG,IAAI,YAAY,EAAE,CAAC;GAC3B;;AAED,sCAAoC,EAAE,0CAAW;AAC/C,QAAI,QAAQ,GAAG,SAAS,CAAC;AACzB,UAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;GAC/D;;AAED,mCAAiC,EAAE,uCAAW;AAC5C,QAAI,QAAQ,GAAG,SAAS,CAAC;AACzB,UAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;GAC/D;;AAED,iCAA+B,EAAE,qCAAW;AAC1C,QAAI,QAAQ,GAAG,WAAW,CAAC;AAC3B,UAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;GAC/D;;AAED,uDAAqD,EAAE,uDAAW;AAChE,QAAI,QAAQ,GAAG,SAAS,CAAC;AACzB,QAAI,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,aAAa,CAAC;AAClD,UAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,CAAC;GAChD;;AAED,6BAA2B,EAAE,kCAAW;AACtC,QAAI,QAAQ,GAAG,SAAS,CAAC;AACzB,UAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;GAC/D;;AAED,kCAAgC,EAAE,sCAAW;AAC3C,QAAI,QAAQ,GAAG,eAAe,CAAC;AAC/B,UAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;GAC/D;;AAED,6EAA2E,EAAE,6EAAW;AACtF,QAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;AAE3B,QAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC7D,UAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAE1B,QAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC;AACzD,UAAM,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;;AAEtB,QAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC3D,UAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;AAE1B,QAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;AACtD,UAAM,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;GAC3B;CACF,CAAC,CAAC;;AAEH,SAAS,UAAU,CAAC,QAAQ,EAAE;AAC5B,SAAO,2DAA2D,GAAG,QAAQ,GAAG,GAAG,CAAC;CACrF","file":"test-incoming-form-compiled.js","sourcesContent":["var common       = require('../common');\nvar test         = require('utest');\nvar assert       = common.assert;\nvar IncomingForm = common.require('incoming_form').IncomingForm;\nvar path         = require('path');\n\nvar form;\ntest('IncomingForm', {\n  before: function() {\n    form = new IncomingForm();\n  },\n\n  '#_fileName with regular characters': function() {\n    var filename = 'foo.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'foo.txt');\n  },\n\n  '#_fileName with unescaped quote': function() {\n    var filename = 'my\".txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'my\".txt');\n  },\n\n  '#_fileName with escaped quote': function() {\n    var filename = 'my%22.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'my\".txt');\n  },\n\n  '#_fileName with bad quote and additional sub-header': function() {\n    var filename = 'my\".txt';\n    var header = makeHeader(filename) + '; foo=\"bar\"';\n    assert.equal(form._fileName(header), filename);\n  },\n\n  '#_fileName with semicolon': function() {\n    var filename = 'my;.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'my;.txt');\n  },\n\n  '#_fileName with utf8 character': function() {\n    var filename = 'my&#9731;.txt';\n    assert.equal(form._fileName(makeHeader(filename)), 'myâ˜ƒ.txt');\n  },\n\n  '#_uploadPath strips harmful characters from extension when keepExtensions': function() {\n    form.keepExtensions = true;\n\n    var ext = path.extname(form._uploadPath('fine.jpg?foo=bar'));\n    assert.equal(ext, '.jpg');\n\n    var ext = path.extname(form._uploadPath('fine?foo=bar'));\n    assert.equal(ext, '');\n\n    var ext = path.extname(form._uploadPath('super.cr2+dsad'));\n    assert.equal(ext, '.cr2');\n\n    var ext = path.extname(form._uploadPath('super.bar'));\n    assert.equal(ext, '.bar');\n  },\n});\n\nfunction makeHeader(filename) {\n  return 'Content-Disposition: form-data; name=\"upload\"; filename=\"' + filename + '\"';\n}\n"]}