{"version":3,"sources":["record.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI,WAAW,GAAG,CAAC,CAAC;;AAEpB,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE;AAChD,MAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACxB,SAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAE1E,KAAG,CAAC,EAAE,CAAC,KAAK,EAAE,YAAW;AACvB,QAAI,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE;AACnB,SAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;AACrB,cAAM,EAAE,GAAG,CAAC,MAAM;AAClB,WAAG,EAAE,GAAG,CAAC,GAAG;AACZ,gBAAQ,EAAE,MAAM,CAAC,QAAQ;OAC1B,CAAC,CAAC,CAAC;AACJ,aAAO;KACR;;AAED,OAAG,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,cAAc,EAAE,WAAW,EAAC,CAAC,CAAC;AAClD,OAAG,CAAC,GAAG,CACL,qEAAqE,GACrE,sCAAsC,GACtC,2DAA2D,GAC3D,sCAAsC,GACtC,SAAS,CACV,CAAC;GACH,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,MAAM,EAAE;AACvC,aAAW,EAAE,CAAC;;AAEd,QAAM,CAAC,EAAE,GAAG,WAAW,CAAC;AACxB,QAAM,CAAC,QAAQ,GAAG,aAAa,GAAG,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC;AACtD,QAAM,CAAC,IAAI,GAAG,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACpD,QAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEzB,SAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC,QAAM,CAAC,EAAE,CAAC,OAAO,EAAE,YAAW;AAC5B,WAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;GACxC,CAAC,CAAC;CACJ,CAAC,CAAC;;AAEH,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACpC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,YAAW;AAC7B,SAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;CACvD,CAAC,CAAC","file":"record-compiled.js","sourcesContent":["var http = require('http');\nvar fs = require('fs');\nvar connections = 0;\n\nvar server = http.createServer(function(req, res) {\n  var socket = req.socket;\n  console.log('Request: %s %s -> %s', req.method, req.url, socket.filename);\n\n  req.on('end', function() {\n    if (req.url !== '/') {\n      res.end(JSON.stringify({\n        method: req.method,\n        url: req.url,\n        filename: socket.filename,\n      }));\n      return;\n    }\n\n    res.writeHead(200, {'content-type': 'text/html'});\n    res.end(\n      '<form action=\"/upload\" enctype=\"multipart/form-data\" method=\"post\">'+\n      '<input type=\"text\" name=\"title\"><br>'+\n      '<input type=\"file\" name=\"upload\" multiple=\"multiple\"><br>'+\n      '<input type=\"submit\" value=\"Upload\">'+\n      '</form>'\n    );\n  });\n});\n\nserver.on('connection', function(socket) {\n  connections++;\n\n  socket.id = connections;\n  socket.filename = 'connection-' + socket.id + '.http';\n  socket.file = fs.createWriteStream(socket.filename);\n  socket.pipe(socket.file);\n\n  console.log('--> %s', socket.filename);\n  socket.on('close', function() {\n    console.log('<-- %s', socket.filename);\n  });\n});\n\nvar port = process.env.PORT || 8080;\nserver.listen(port, function() {\n  console.log('Recording connections on port %s', port);\n});\n"]}