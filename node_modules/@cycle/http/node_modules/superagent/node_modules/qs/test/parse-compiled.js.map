{"version":3,"sources":["parse.js"],"names":[],"mappings":"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","file":"parse-compiled.js","sourcesContent":["/* eslint no-extend-native:0 */\n// Load modules\n\nvar Code = require('code');\nvar Lab = require('lab');\nvar Qs = require('../');\n\n\n// Declare internals\n\nvar internals = {};\n\n\n// Test shortcuts\n\nvar lab = exports.lab = Lab.script();\nvar expect = Code.expect;\nvar describe = lab.experiment;\nvar it = lab.test;\n\n\ndescribe('parse()', function () {\n\n    it('parses a simple string', function (done) {\n\n        expect(Qs.parse('0=foo')).to.deep.equal({ '0': 'foo' });\n        expect(Qs.parse('foo=c++')).to.deep.equal({ foo: 'c  ' });\n        expect(Qs.parse('a[>=]=23')).to.deep.equal({ a: { '>=': '23' } });\n        expect(Qs.parse('a[<=>]==23')).to.deep.equal({ a: { '<=>': '=23' } });\n        expect(Qs.parse('a[==]=23')).to.deep.equal({ a: { '==': '23' } });\n        expect(Qs.parse('foo')).to.deep.equal({ foo: '' });\n        expect(Qs.parse('foo=bar')).to.deep.equal({ foo: 'bar' });\n        expect(Qs.parse(' foo = bar = baz ')).to.deep.equal({ ' foo ': ' bar = baz ' });\n        expect(Qs.parse('foo=bar=baz')).to.deep.equal({ foo: 'bar=baz' });\n        expect(Qs.parse('foo=bar&bar=baz')).to.deep.equal({ foo: 'bar', bar: 'baz' });\n        expect(Qs.parse('foo=bar&baz')).to.deep.equal({ foo: 'bar', baz: '' });\n        expect(Qs.parse('cht=p3&chd=t:60,40&chs=250x100&chl=Hello|World')).to.deep.equal({\n            cht: 'p3',\n            chd: 't:60,40',\n            chs: '250x100',\n            chl: 'Hello|World'\n        });\n        done();\n    });\n\n    it('parses a single nested string', function (done) {\n\n        expect(Qs.parse('a[b]=c')).to.deep.equal({ a: { b: 'c' } });\n        done();\n    });\n\n    it('parses a double nested string', function (done) {\n\n        expect(Qs.parse('a[b][c]=d')).to.deep.equal({ a: { b: { c: 'd' } } });\n        done();\n    });\n\n    it('defaults to a depth of 5', function (done) {\n\n        expect(Qs.parse('a[b][c][d][e][f][g][h]=i')).to.deep.equal({ a: { b: { c: { d: { e: { f: { '[g][h]': 'i' } } } } } } });\n        done();\n    });\n\n    it('only parses one level when depth = 1', function (done) {\n\n        expect(Qs.parse('a[b][c]=d', { depth: 1 })).to.deep.equal({ a: { b: { '[c]': 'd' } } });\n        expect(Qs.parse('a[b][c][d]=e', { depth: 1 })).to.deep.equal({ a: { b: { '[c][d]': 'e' } } });\n        done();\n    });\n\n    it('parses a simple array', function (done) {\n\n        expect(Qs.parse('a=b&a=c')).to.deep.equal({ a: ['b', 'c'] });\n        done();\n    });\n\n    it('parses an explicit array', function (done) {\n\n        expect(Qs.parse('a[]=b')).to.deep.equal({ a: ['b'] });\n        expect(Qs.parse('a[]=b&a[]=c')).to.deep.equal({ a: ['b', 'c'] });\n        expect(Qs.parse('a[]=b&a[]=c&a[]=d')).to.deep.equal({ a: ['b', 'c', 'd'] });\n        done();\n    });\n\n    it('parses a mix of simple and explicit arrays', function (done) {\n\n        expect(Qs.parse('a=b&a[]=c')).to.deep.equal({ a: ['b', 'c'] });\n        expect(Qs.parse('a[]=b&a=c')).to.deep.equal({ a: ['b', 'c'] });\n        expect(Qs.parse('a[0]=b&a=c')).to.deep.equal({ a: ['b', 'c'] });\n        expect(Qs.parse('a=b&a[0]=c')).to.deep.equal({ a: ['b', 'c'] });\n        expect(Qs.parse('a[1]=b&a=c')).to.deep.equal({ a: ['b', 'c'] });\n        expect(Qs.parse('a=b&a[1]=c')).to.deep.equal({ a: ['b', 'c'] });\n        done();\n    });\n\n    it('parses a nested array', function (done) {\n\n        expect(Qs.parse('a[b][]=c&a[b][]=d')).to.deep.equal({ a: { b: ['c', 'd'] } });\n        expect(Qs.parse('a[>=]=25')).to.deep.equal({ a: { '>=': '25' } });\n        done();\n    });\n\n    it('allows to specify array indices', function (done) {\n\n        expect(Qs.parse('a[1]=c&a[0]=b&a[2]=d')).to.deep.equal({ a: ['b', 'c', 'd'] });\n        expect(Qs.parse('a[1]=c&a[0]=b')).to.deep.equal({ a: ['b', 'c'] });\n        expect(Qs.parse('a[1]=c')).to.deep.equal({ a: ['c'] });\n        done();\n    });\n\n    it('limits specific array indices to 20', function (done) {\n\n        expect(Qs.parse('a[20]=a')).to.deep.equal({ a: ['a'] });\n        expect(Qs.parse('a[21]=a')).to.deep.equal({ a: { '21': 'a' } });\n        done();\n    });\n\n    it('supports keys that begin with a number', function (done) {\n\n        expect(Qs.parse('a[12b]=c')).to.deep.equal({ a: { '12b': 'c' } });\n        done();\n    });\n\n    it('supports encoded = signs', function (done) {\n\n        expect(Qs.parse('he%3Dllo=th%3Dere')).to.deep.equal({ 'he=llo': 'th=ere' });\n        done();\n    });\n\n    it('is ok with url encoded strings', function (done) {\n\n        expect(Qs.parse('a[b%20c]=d')).to.deep.equal({ a: { 'b c': 'd' } });\n        expect(Qs.parse('a[b]=c%20d')).to.deep.equal({ a: { b: 'c d' } });\n        done();\n    });\n\n    it('allows brackets in the value', function (done) {\n\n        expect(Qs.parse('pets=[\"tobi\"]')).to.deep.equal({ pets: '[\"tobi\"]' });\n        expect(Qs.parse('operators=[\">=\", \"<=\"]')).to.deep.equal({ operators: '[\">=\", \"<=\"]' });\n        done();\n    });\n\n    it('allows empty values', function (done) {\n\n        expect(Qs.parse('')).to.deep.equal({});\n        expect(Qs.parse(null)).to.deep.equal({});\n        expect(Qs.parse(undefined)).to.deep.equal({});\n        done();\n    });\n\n    it('transforms arrays to objects', function (done) {\n\n        expect(Qs.parse('foo[0]=bar&foo[bad]=baz')).to.deep.equal({ foo: { '0': 'bar', bad: 'baz' } });\n        expect(Qs.parse('foo[bad]=baz&foo[0]=bar')).to.deep.equal({ foo: { bad: 'baz', '0': 'bar' } });\n        expect(Qs.parse('foo[bad]=baz&foo[]=bar')).to.deep.equal({ foo: { bad: 'baz', '0': 'bar' } });\n        expect(Qs.parse('foo[]=bar&foo[bad]=baz')).to.deep.equal({ foo: { '0': 'bar', bad: 'baz' } });\n        expect(Qs.parse('foo[bad]=baz&foo[]=bar&foo[]=foo')).to.deep.equal({ foo: { bad: 'baz', '0': 'bar', '1': 'foo' } });\n        expect(Qs.parse('foo[0][a]=a&foo[0][b]=b&foo[1][a]=aa&foo[1][b]=bb')).to.deep.equal({foo: [ {a: 'a', b: 'b'}, {a: 'aa', b: 'bb'} ]});\n        done();\n    });\n\n    it('can add keys to objects', function (done) {\n\n        expect(Qs.parse('a[b]=c&a=d')).to.deep.equal({ a: { b: 'c', d: true } });\n        done();\n    });\n\n    it('correctly prunes undefined values when converting an array to an object', function (done) {\n\n        expect(Qs.parse('a[2]=b&a[99999999]=c')).to.deep.equal({ a: { '2': 'b', '99999999': 'c' } });\n        done();\n    });\n\n    it('supports malformed uri characters', function (done) {\n\n        expect(Qs.parse('{%:%}')).to.deep.equal({ '{%:%}': '' });\n        expect(Qs.parse('foo=%:%}')).to.deep.equal({ foo: '%:%}' });\n        done();\n    });\n\n    it('doesn\\'t produce empty keys', function (done) {\n\n        expect(Qs.parse('_r=1&')).to.deep.equal({ '_r': '1' });\n        done();\n    });\n\n    it('cannot override prototypes', function (done) {\n\n        var obj = Qs.parse('toString=bad&bad[toString]=bad&constructor=bad');\n        expect(typeof obj.toString).to.equal('function');\n        expect(typeof obj.bad.toString).to.equal('function');\n        expect(typeof obj.constructor).to.equal('function');\n        done();\n    });\n\n    it('cannot access Object prototype', function (done) {\n\n        Qs.parse('constructor[prototype][bad]=bad');\n        Qs.parse('bad[constructor][prototype][bad]=bad');\n        expect(typeof Object.prototype.bad).to.equal('undefined');\n        done();\n    });\n\n    it('parses arrays of objects', function (done) {\n\n        expect(Qs.parse('a[][b]=c')).to.deep.equal({ a: [{ b: 'c' }] });\n        expect(Qs.parse('a[0][b]=c')).to.deep.equal({ a: [{ b: 'c' }] });\n        done();\n    });\n\n    it('allows for empty strings in arrays', function (done) {\n\n        expect(Qs.parse('a[]=b&a[]=&a[]=c')).to.deep.equal({ a: ['b', '', 'c'] });\n        expect(Qs.parse('a[0]=b&a[1]=&a[2]=c&a[19]=')).to.deep.equal({ a: ['b', '', 'c', ''] });\n        expect(Qs.parse('a[]=&a[]=b&a[]=c')).to.deep.equal({ a: ['', 'b', 'c'] });\n        done();\n    });\n\n    it('compacts sparse arrays', function (done) {\n\n        expect(Qs.parse('a[10]=1&a[2]=2')).to.deep.equal({ a: ['2', '1'] });\n        done();\n    });\n\n    it('parses semi-parsed strings', function (done) {\n\n        expect(Qs.parse({ 'a[b]': 'c' })).to.deep.equal({ a: { b: 'c' } });\n        expect(Qs.parse({ 'a[b]': 'c', 'a[d]': 'e' })).to.deep.equal({ a: { b: 'c', d: 'e' } });\n        done();\n    });\n\n    it('parses buffers correctly', function (done) {\n\n        var b = new Buffer('test');\n        expect(Qs.parse({ a: b })).to.deep.equal({ a: b });\n        done();\n    });\n\n    it('continues parsing when no parent is found', function (done) {\n\n        expect(Qs.parse('[]&a=b')).to.deep.equal({ '0': '', a: 'b' });\n        expect(Qs.parse('[foo]=bar')).to.deep.equal({ foo: 'bar' });\n        done();\n    });\n\n    it('does not error when parsing a very long array', function (done) {\n\n        var str = 'a[]=a';\n        while (Buffer.byteLength(str) < 128 * 1024) {\n            str += '&' + str;\n        }\n\n        expect(function () {\n\n            Qs.parse(str);\n        }).to.not.throw();\n\n        done();\n    });\n\n    it('should not throw when a native prototype has an enumerable property', { parallel: false }, function (done) {\n\n        Object.prototype.crash = '';\n        Array.prototype.crash = '';\n        expect(Qs.parse.bind(null, 'a=b')).to.not.throw();\n        expect(Qs.parse('a=b')).to.deep.equal({ a: 'b' });\n        expect(Qs.parse.bind(null, 'a[][b]=c')).to.not.throw();\n        expect(Qs.parse('a[][b]=c')).to.deep.equal({ a: [{ b: 'c' }] });\n        delete Object.prototype.crash;\n        delete Array.prototype.crash;\n        done();\n    });\n\n    it('parses a string with an alternative string delimiter', function (done) {\n\n        expect(Qs.parse('a=b;c=d', { delimiter: ';' })).to.deep.equal({ a: 'b', c: 'd' });\n        done();\n    });\n\n    it('parses a string with an alternative RegExp delimiter', function (done) {\n\n        expect(Qs.parse('a=b; c=d', { delimiter: /[;,] */ })).to.deep.equal({ a: 'b', c: 'd' });\n        done();\n    });\n\n    it('does not use non-splittable objects as delimiters', function (done) {\n\n        expect(Qs.parse('a=b&c=d', { delimiter: true })).to.deep.equal({ a: 'b', c: 'd' });\n        done();\n    });\n\n    it('allows overriding parameter limit', function (done) {\n\n        expect(Qs.parse('a=b&c=d', { parameterLimit: 1 })).to.deep.equal({ a: 'b' });\n        done();\n    });\n\n    it('allows setting the parameter limit to Infinity', function (done) {\n\n        expect(Qs.parse('a=b&c=d', { parameterLimit: Infinity })).to.deep.equal({ a: 'b', c: 'd' });\n        done();\n    });\n\n    it('allows overriding array limit', function (done) {\n\n        expect(Qs.parse('a[0]=b', { arrayLimit: -1 })).to.deep.equal({ a: { '0': 'b' } });\n        expect(Qs.parse('a[-1]=b', { arrayLimit: -1 })).to.deep.equal({ a: { '-1': 'b' } });\n        expect(Qs.parse('a[0]=b&a[1]=c', { arrayLimit: 0 })).to.deep.equal({ a: { '0': 'b', '1': 'c' } });\n        done();\n    });\n\n    it('parses an object', function (done) {\n\n        var input = {\n            'user[name]': {'pop[bob]': 3},\n            'user[email]': null\n        };\n\n        var expected = {\n            'user': {\n                'name': {'pop[bob]': 3},\n                'email': null\n            }\n        };\n\n        var result = Qs.parse(input);\n\n        expect(result).to.deep.equal(expected);\n        done();\n    });\n\n    it('parses an object and not child values', function (done) {\n\n        var input = {\n            'user[name]': {'pop[bob]': { 'test': 3 }},\n            'user[email]': null\n        };\n\n        var expected = {\n            'user': {\n                'name': {'pop[bob]': { 'test': 3 }},\n                'email': null\n            }\n        };\n\n        var result = Qs.parse(input);\n\n        expect(result).to.deep.equal(expected);\n        done();\n    });\n\n    it('does not blow up when Buffer global is missing', function (done) {\n\n        var tempBuffer = global.Buffer;\n        delete global.Buffer;\n        var result = Qs.parse('a=b&c=d');\n        global.Buffer = tempBuffer;\n        expect(result).to.deep.equal({ a: 'b', c: 'd' });\n        done();\n    });\n\n    it('does not crash when using invalid dot notation', function (done) {\n\n        expect(Qs.parse('roomInfoList[0].childrenAges[0]=15&roomInfoList[0].numberOfAdults=2')).to.deep.equal({ roomInfoList: [['15', '2']] });\n        done();\n    });\n\n    it('does not crash when parsing circular references', function (done) {\n\n        var a = {};\n        a.b = a;\n\n        var parsed;\n\n        expect(function () {\n\n            parsed = Qs.parse({ 'foo[bar]': 'baz', 'foo[baz]': a });\n        }).to.not.throw();\n\n        expect(parsed).to.contain('foo');\n        expect(parsed.foo).to.contain('bar', 'baz');\n        expect(parsed.foo.bar).to.equal('baz');\n        expect(parsed.foo.baz).to.deep.equal(a);\n        done();\n    });\n\n    it('parses plain objects correctly', function (done) {\n\n        var a = Object.create(null);\n        a.b = 'c';\n\n        expect(Qs.parse(a)).to.deep.equal({ b: 'c' });\n        var result = Qs.parse({ a: a });\n        expect(result).to.contain('a');\n        expect(result.a).to.deep.equal(a);\n        done();\n    });\n\n    it('parses dates correctly', function (done) {\n\n        var now = new Date();\n        expect(Qs.parse({ a: now })).to.deep.equal({ a: now });\n        done();\n    });\n\n    it('parses regular expressions correctly', function (done) {\n\n        var re = /^test$/;\n        expect(Qs.parse({ a: re })).to.deep.equal({ a: re });\n        done();\n    });\n});\n"]}