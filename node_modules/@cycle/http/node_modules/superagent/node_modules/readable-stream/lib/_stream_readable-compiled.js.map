{"version":3,"sources":["_stream_readable.js"],"names":[],"mappings":"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","file":"_stream_readable-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = false;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // In streams that never have any data, and do push(null) right away,\n  // the consumer can miss the 'end' event if they do some I/O before\n  // consuming the stream.  So, we don't emit('end') until some reading\n  // happens.\n  this.calledRead = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (typeof chunk === 'string' && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null || chunk === undefined) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      // update the buffer info.\n      state.length += state.objectMode ? 1 : chunk.length;\n      if (addToFront) {\n        state.buffer.unshift(chunk);\n      } else {\n        state.reading = false;\n        state.buffer.push(chunk);\n      }\n\n      if (state.needReadable)\n        emitReadable(stream);\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || n === null) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  var state = this._readableState;\n  state.calledRead = true;\n  var nOrig = n;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length - n <= state.highWaterMark)\n    doRead = true;\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading)\n    doRead = false;\n\n  if (doRead) {\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read called its callback synchronously, then `reading`\n  // will be false, and we need to re-evaluate how much data we\n  // can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we happened to read() exactly the remaining amount in the\n  // buffer, and the EOF has been seen at this point, then make sure\n  // that we emit 'end' on the very next tick.\n  if (state.ended && !state.endEmitted && state.length === 0)\n    endReadable(this);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode &&\n      !er) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // if we've ended and we have some data left, then emit\n  // 'readable' now to make sure it gets picked up.\n  if (state.length > 0)\n    emitReadable(stream);\n  else\n    endReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (state.emittedReadable)\n    return;\n\n  state.emittedReadable = true;\n  if (state.sync)\n    process.nextTick(function() {\n      emitReadable_(stream);\n    });\n  else\n    emitReadable_(stream);\n}\n\nfunction emitReadable_(stream) {\n  stream.emit('readable');\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    if (readable !== src) return;\n    cleanup();\n  }\n\n  function onend() {\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (!dest._writableState || dest._writableState.needDrain)\n      ondrain();\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    // the handler that waits for readable events after all\n    // the data gets sucked out in flow.\n    // This would be easier to follow with a .once() handler\n    // in flow(), but that is too slow.\n    this.on('readable', pipeOnReadable);\n\n    state.flowing = true;\n    process.nextTick(function() {\n      flow(src);\n    });\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var dest = this;\n    var state = src._readableState;\n    state.awaitDrain--;\n    if (state.awaitDrain === 0)\n      flow(src);\n  };\n}\n\nfunction flow(src) {\n  var state = src._readableState;\n  var chunk;\n  state.awaitDrain = 0;\n\n  function write(dest, i, list) {\n    var written = dest.write(chunk);\n    if (false === written) {\n      state.awaitDrain++;\n    }\n  }\n\n  while (state.pipesCount && null !== (chunk = src.read())) {\n\n    if (state.pipesCount === 1)\n      write(state.pipes, 0, null);\n    else\n      forEach(state.pipes, write);\n\n    src.emit('data', chunk);\n\n    // if anyone needs a drain, then we have to wait for that.\n    if (state.awaitDrain > 0)\n      return;\n  }\n\n  // if every destination was unpiped, either before entering this\n  // function, or in the while loop, then stop flowing.\n  //\n  // NB: This is a pretty rare edge case.\n  if (state.pipesCount === 0) {\n    state.flowing = false;\n\n    // if there were data event listeners added, then switch to old mode.\n    if (EE.listenerCount(src, 'data') > 0)\n      emitDataEvents(src);\n    return;\n  }\n\n  // at this point, no one needed a drain, so we just ran out of data\n  // on the next readable event, start it over again.\n  state.ranOut = true;\n}\n\nfunction pipeOnReadable() {\n  if (this._readableState.ranOut) {\n    this._readableState.ranOut = false;\n    flow(this);\n  }\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    this.removeListener('readable', pipeOnReadable);\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data' && !this._readableState.flowing)\n    emitDataEvents(this);\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        this.read(0);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  emitDataEvents(this);\n  this.read(0);\n  this.emit('resume');\n};\n\nReadable.prototype.pause = function() {\n  emitDataEvents(this, true);\n  this.emit('pause');\n};\n\nfunction emitDataEvents(stream, startPaused) {\n  var state = stream._readableState;\n\n  if (state.flowing) {\n    // https://github.com/isaacs/readable-stream/issues/16\n    throw new Error('Cannot switch to old mode now.');\n  }\n\n  var paused = startPaused || false;\n  var readable = false;\n\n  // convert to an old-style stream.\n  stream.readable = true;\n  stream.pipe = Stream.prototype.pipe;\n  stream.on = stream.addListener = Stream.prototype.on;\n\n  stream.on('readable', function() {\n    readable = true;\n\n    var c;\n    while (!paused && (null !== (c = stream.read())))\n      stream.emit('data', c);\n\n    if (c === null) {\n      readable = false;\n      stream._readableState.needReadable = true;\n    }\n  });\n\n  stream.pause = function() {\n    paused = true;\n    this.emit('pause');\n  };\n\n  stream.resume = function() {\n    paused = false;\n    if (readable)\n      process.nextTick(function() {\n        stream.emit('readable');\n      });\n    else\n      this.read(0);\n    this.emit('resume');\n  };\n\n  // now make it start, just in case it hadn't already.\n  stream.emit('readable');\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (typeof stream[i] === 'function' &&\n        typeof this[i] === 'undefined') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted && state.calledRead) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n"]}