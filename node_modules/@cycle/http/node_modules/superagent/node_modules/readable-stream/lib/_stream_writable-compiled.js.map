{"version":3,"sources":["_stream_writable.js"],"names":[],"mappings":"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","file":"_stream_writable-compiled.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, becuase any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!Buffer.isBuffer(chunk) &&\n      'string' !== typeof chunk &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb))\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\n  return ret;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      cb(er);\n    });\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished && !state.bufferProcessing && state.buffer.length)\n      clearBuffer(stream, state);\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  cb();\n  if (finished)\n    finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  for (var c = 0; c < state.buffer.length; c++) {\n    var entry = state.buffer[c];\n    var chunk = entry.chunk;\n    var encoding = entry.encoding;\n    var cb = entry.callback;\n    var len = state.objectMode ? 1 : chunk.length;\n\n    doWrite(stream, state, len, chunk, encoding, cb);\n\n    // if we didn't call the onwrite immediately, then\n    // it means that we need to wait until it does.\n    // also, that means that the chunk and cb are currently\n    // being processed, so move the buffer counter past them.\n    if (state.writing) {\n      c++;\n      break;\n    }\n  }\n\n  state.bufferProcessing = false;\n  if (c < state.buffer.length)\n    state.buffer = state.buffer.slice(c);\n  else\n    state.buffer.length = 0;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (typeof chunk !== 'undefined' && chunk !== null)\n    this.write(chunk, encoding);\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    state.finished = true;\n    stream.emit('finish');\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n"]}