{"version":3,"sources":["node.js"],"names":[],"mappings":"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","file":"node-compiled.js","sourcesContent":["'use strict';\n\nvar uri = 'http://localhost:5000';\nprocess.env.ZUUL_PORT = 5000;\nrequire('./support/server');\nrequire('./common')(uri);\n\n// Node.js specific ============================================================\nvar assert = require('assert');\nvar Cycle = require('@cycle/core');\nvar src = require('../lib/index');\nvar makeHTTPDriver = src.makeHTTPDriver;\nvar globalSandbox = require('./support/global');\n\ndescribe('HTTP Driver in Node.js', function () {\n  it('should auto-execute HTTP request when factory gets autoSubscribe = true',\n    function(done) {\n      var request$ = Cycle.Rx.Observable.just({\n        url: uri + '/pet',\n        method: 'POST',\n        send: {name: 'Woof', species: 'Dog'}\n      });\n      var httpDriver = makeHTTPDriver({autoSubscribe: true});\n      globalSandbox.petPOSTResponse = null;\n      httpDriver(request$);\n      setTimeout(function () {\n        assert.notStrictEqual(globalSandbox.petPOSTResponse, null);\n        assert.strictEqual(globalSandbox.petPOSTResponse, 'added Woof the Dog');\n        globalSandbox.petPOSTResponse = null;\n        done();\n      }, 100);\n    }\n  );\n\n  it('should auto-execute HTTP request by default',\n    function(done) {\n      var request$ = Cycle.Rx.Observable.just({\n        url: uri + '/pet',\n        method: 'POST',\n        send: {name: 'Woof', species: 'Dog'}\n      });\n      var httpDriver = makeHTTPDriver();\n      globalSandbox.petPOSTResponse = null;\n      httpDriver(request$);\n      setTimeout(function () {\n        assert.notStrictEqual(globalSandbox.petPOSTResponse, null);\n        assert.strictEqual(globalSandbox.petPOSTResponse, 'added Woof the Dog');\n        globalSandbox.petPOSTResponse = null;\n        done();\n      }, 100);\n    }\n  );\n\n  it('should not auto-execute HTTP request when factory gets autoSubscribe = false',\n    function(done) {\n      var request$ = Cycle.Rx.Observable.just({\n        url: uri + '/pet',\n        method: 'POST',\n        send: {name: 'Woof', species: 'Dog'}\n      });\n      var httpDriver = makeHTTPDriver({autoSubscribe: false});\n      globalSandbox.petPOSTResponse = null;\n      httpDriver(request$);\n      setTimeout(function () {\n        assert.strictEqual(globalSandbox.petPOSTResponse, null);\n        done();\n      }, 100);\n    }\n  );\n});\n"]}