{"version":3,"sources":["character_counter.js"],"names":[],"mappings":";;AAAA,AAAC,CAAA,UAAU,CAAC,EAAE;;AAEZ,GAAC,CAAC,EAAE,CAAC,gBAAgB,GAAG,YAAU;AAChC,WAAO,IAAI,CAAC,IAAI,CAAC,YAAU;;AAEzB,UAAI,oBAAoB,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC;;AAEhE,UAAG,oBAAoB,EAAC;AACtB,SAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACnC,SAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;AACnC,SAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;;AAEzC,yBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;OAC5B;KAEF,CAAC,CAAC;GACJ,CAAC;;AAEF,WAAS,aAAa,GAAE;AACtB,QAAI,SAAS,GAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC3C,YAAY,GAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM;QACzC,aAAa,GAAO,YAAY,IAAI,SAAS,CAAC;;AAE9C,KAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,iCAAiC,CAAC,CACvC,IAAI,CAAE,YAAY,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC;;AAEvD,iBAAa,CAAC,aAAa,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;GACvC;;AAED,WAAS,iBAAiB,CAAC,MAAM,EAAC;AAChC,QAAI,eAAe,GAAG,CAAC,CAAC,SAAS,CAAC,CACb,QAAQ,CAAC,mBAAmB,CAAC,CAC7B,GAAG,CAAC,OAAO,EAAC,OAAO,CAAC,CACpB,GAAG,CAAC,WAAW,EAAC,MAAM,CAAC,CACvB,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;AAEtC,UAAM,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;GACzC;;AAED,WAAS,oBAAoB,GAAE;AAC7B,KAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GACnE;;AAED,WAAS,aAAa,CAAC,aAAa,EAAE,MAAM,EAAC;AAC3C,QAAI,oBAAoB,GAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACtD,QAAI,aAAa,IAAI,oBAAoB,EAAE;AACzC,YAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;KAC/B,MACI,IAAG,CAAC,aAAa,IAAI,CAAC,oBAAoB,EAAC;AAC9C,YAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AAC5B,YAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAC5B;GACF;;AAED,GAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,YAAU;AAC1B,KAAC,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,EAAE,CAAC;GACzC,CAAC,CAAC;CAEJ,CAAA,CAAE,MAAM,CAAE,CAAE","file":"character_counter-compiled.js","sourcesContent":["(function ($) {\n\n  $.fn.characterCounter = function(){\n    return this.each(function(){\n\n      var itHasLengthAttribute = $(this).attr('length') !== undefined;\n\n      if(itHasLengthAttribute){\n        $(this).on('input', updateCounter);\n        $(this).on('focus', updateCounter);\n        $(this).on('blur', removeCounterElement);\n\n        addCounterElement($(this));\n      }\n\n    });\n  };\n\n  function updateCounter(){\n    var maxLength     = +$(this).attr('length'),\n    actualLength      = +$(this).val().length,\n    isValidLength     = actualLength <= maxLength;\n\n    $(this).parent().find('span[class=\"character-counter\"]')\n                    .html( actualLength + '/' + maxLength);\n\n    addInputStyle(isValidLength, $(this));\n  }\n\n  function addCounterElement($input){\n    var $counterElement = $('<span/>')\n                        .addClass('character-counter')\n                        .css('float','right')\n                        .css('font-size','12px')\n                        .css('height', 1);\n\n    $input.parent().append($counterElement);\n  }\n\n  function removeCounterElement(){\n    $(this).parent().find('span[class=\"character-counter\"]').html('');\n  }\n\n  function addInputStyle(isValidLength, $input){\n    var inputHasInvalidClass = $input.hasClass('invalid');\n    if (isValidLength && inputHasInvalidClass) {\n      $input.removeClass('invalid');\n    }\n    else if(!isValidLength && !inputHasInvalidClass){\n      $input.removeClass('valid');\n      $input.addClass('invalid');\n    }\n  }\n\n  $(document).ready(function(){\n    $('input, textarea').characterCounter();\n  });\n\n}( jQuery ));\n"]}