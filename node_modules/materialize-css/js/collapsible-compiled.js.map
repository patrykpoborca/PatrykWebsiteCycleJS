{"version":3,"sources":["collapsible.js"],"names":[],"mappings":"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","file":"collapsible-compiled.js","sourcesContent":["(function ($) {\n  $.fn.collapsible = function(options) {\n    var defaults = {\n        accordion: undefined\n    };\n\n    options = $.extend(defaults, options);\n\n\n    return this.each(function() {\n\n      var $this = $(this);\n\n      var $panel_headers = $(this).find('> li > .collapsible-header');\n\n      var collapsible_type = $this.data(\"collapsible\");\n\n      // Turn off any existing event handlers\n       $this.off('click.collapse', '.collapsible-header');\n       $panel_headers.off('click.collapse');\n\n\n       /****************\n       Helper Functions\n       ****************/\n\n      // Accordion Open\n      function accordionOpen(object) {\n        $panel_headers = $this.find('> li > .collapsible-header');\n        if (object.hasClass('active')) {\n            object.parent().addClass('active');\n        }\n        else {\n            object.parent().removeClass('active');\n        }\n        if (object.parent().hasClass('active')){\n          object.siblings('.collapsible-body').stop(true,false).slideDown({ duration: 350, easing: \"easeOutQuart\", queue: false, complete: function() {$(this).css('height', '');}});\n        }\n        else{\n          object.siblings('.collapsible-body').stop(true,false).slideUp({ duration: 350, easing: \"easeOutQuart\", queue: false, complete: function() {$(this).css('height', '');}});\n        }\n\n        $panel_headers.not(object).removeClass('active').parent().removeClass('active');\n        $panel_headers.not(object).parent().children('.collapsible-body').stop(true,false).slideUp(\n          {\n            duration: 350,\n            easing: \"easeOutQuart\",\n            queue: false,\n            complete:\n              function() {\n                $(this).css('height', '');\n              }\n          });\n      }\n\n      // Expandable Open\n      function expandableOpen(object) {\n        if (object.hasClass('active')) {\n            object.parent().addClass('active');\n        }\n        else {\n            object.parent().removeClass('active');\n        }\n        if (object.parent().hasClass('active')){\n          object.siblings('.collapsible-body').stop(true,false).slideDown({ duration: 350, easing: \"easeOutQuart\", queue: false, complete: function() {$(this).css('height', '');}});\n        }\n        else{\n          object.siblings('.collapsible-body').stop(true,false).slideUp({ duration: 350, easing: \"easeOutQuart\", queue: false, complete: function() {$(this).css('height', '');}});\n        }\n      }\n\n      /**\n       * Check if object is children of panel header\n       * @param  {Object}  object Jquery object\n       * @return {Boolean} true if it is children\n       */\n      function isChildrenOfPanelHeader(object) {\n\n        var panelHeader = getPanelHeader(object);\n\n        return panelHeader.length > 0;\n      }\n\n      /**\n       * Get panel header from a children element\n       * @param  {Object} object Jquery object\n       * @return {Object} panel header object\n       */\n      function getPanelHeader(object) {\n\n        return object.closest('li > .collapsible-header');\n      }\n\n      /*****  End Helper Functions  *****/\n\n\n\n      if (options.accordion || collapsible_type === \"accordion\" || collapsible_type === undefined) { // Handle Accordion\n        // Add click handler to only direct collapsible header children\n        $panel_headers = $this.find('> li > .collapsible-header');\n        $panel_headers.on('click.collapse', function (e) {\n          var element = $(e.target);\n\n          if (isChildrenOfPanelHeader(element)) {\n            element = getPanelHeader(element);\n          }\n\n          element.toggleClass('active');\n          accordionOpen(element);\n        });\n        // Open first active\n        accordionOpen($panel_headers.filter('.active').first());\n      }\n      else { // Handle Expandables\n        $panel_headers.each(function () {\n          // Add click handler to only direct collapsible header children\n          $(this).on('click.collapse', function (e) {\n            var element = $(e.target);\n            if (isChildrenOfPanelHeader(element)) {\n              element = getPanelHeader(element);\n            }\n            element.toggleClass('active');\n            expandableOpen(element);\n          });\n          // Open any bodies that have the active class\n          if ($(this).hasClass('active')) {\n            expandableOpen($(this));\n          }\n\n        });\n      }\n\n    });\n  };\n\n  $(document).ready(function(){\n    $('.collapsible').collapsible();\n  });\n}( jQuery ));"]}